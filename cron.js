// Generated by CoffeeScript 1.8.0
(function() {
  var cheerio, conn, mysql, parseBody;

  mysql = require('mysql');

  cheerio = require('cheerio');

  conn = mysql.createConnection({
    host: 'localhost',
    user: 'nodejs',
    password: 'nodejs',
    database: 'iportal',
    port: 3306
  });

  conn.connect();

  conn.query('SELECT `id`, `password` FROM `user`', function(error, rows, fields) {
    return rows.forEach(function(value, index) {
      var listOptions, listQueryString, listUrl, loginOptions, loginPostData, loginQueryString, loginUrl, request;
      loginUrl = 'https://myportal.sutd.edu.sg/psp/EPPRD/';
      loginQueryString = {
        cmd: "login",
        languageCd: "ENG"
      };
      loginPostData = {
        timezoneOffset: "-480",
        userid: value.id,
        pwd: value.password
      };
      loginOptions = {
        url: loginUrl,
        method: "POST",
        qs: loginQueryString,
        form: loginPostData
      };
      listUrl = 'https://sams.sutd.edu.sg/psc/CSPRD/EMPLOYEE/HRMS/c/SA_LEARNER_SERVICES.SSR_SSENRL_LIST.GBL';
      listQueryString = {
        Page: "SSR_SSENRL_LIST",
        Action: "A",
        EMPLID: value.id,
        TargetFrameName: "None"
      };
      listOptions = {
        url: listUrl,
        qs: listQueryString
      };
      request = require('request').defaults({
        jar: require('request').jar(),
        strictSSL: false,
        gzip: true,
        followAllRedirects: true,
        headers: {
          "User-Agent": "Nodejs"
        }
      });
      return request(loginOptions, function(loginError, loginResponse, loginBody) {
        if (loginError) {
          return console.log(loginError);
        } else {
          return request(listOptions, function(listError, listResponse, listBody) {
            var courses, inserts, sql;
            if (listError) {
              return console.log(listError);
            } else {
              courses = JSON.stringify(parseBody(listBody));
              sql = "UPDATE `user` SET `courses`= ? WHERE `id` = ?";
              inserts = [courses, value.id];
              sql = mysql.format(sql, inserts);
              return conn.query(sql, function(error) {
                if (error) {
                  return console.log(error);
                }
              });
            }
          });
        }
      });
    });
  });

  parseBody = function(body) {
    var $, courses;
    $ = cheerio.load(body);
    courses = [];
    $('table.PSGROUPBOXWBO').each(function(index, value) {
      var course, i, lesson, nodes, _i, _ref;
      if (index !== 0) {
        course = {
          "name": $(this).find('td.PAGROUPDIVIDER').text()
        };
        nodes = [];
        $(this).find('span.PSEDITBOX_DISPONLY, span.PSLONGEDITBOX').each(function(index, value) {
          var node;
          node = $(this).text();
          if (node.length > 1) {
            return nodes.push(node);
          }
        });
        course['status'] = nodes.shift();
        course['units'] = nodes.shift();
        course['grading'] = nodes.shift();
        course['classNumber'] = nodes.shift();
        course['component'] = nodes.shift();
        course['lessons'] = [];
        for (i = _i = 0, _ref = nodes.length; _i < _ref; i = _i += 4) {
          lesson = {
            time: nodes[i],
            room: nodes[i + 1],
            instructor: nodes[i + 2],
            date: nodes[i + 3]
          };
          course['lessons'].push(lesson);
        }
        return courses.push(course);
      }
    });
    return courses;
  };

}).call(this);
